"""empty message

Revision ID: 76191498b728
Revises: 
Create Date: 2024-06-03 18:44:07.044588

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '76191498b728'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('Plain', 'OAuth2', 'Smtp', name='logintype').create(op.get_bind())
    op.create_table('login_source',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('type', postgresql.ENUM('Plain', 'OAuth2', 'Smtp', name='logintype', create_type=False), nullable=False),
    sa.Column('created', sa.Integer(), nullable=False),
    sa.Column('updated', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lower_name', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_email_private', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('must_change_password', sa.Boolean(), nullable=False),
    sa.Column('login_type', postgresql.ENUM('Plain', 'OAuth2', 'Smtp', name='logintype', create_type=False), nullable=False),
    sa.Column('created', sa.BigInteger(), nullable=False),
    sa.Column('updated', sa.BigInteger(), nullable=False),
    sa.Column('last_login', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lower_name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('oauth2_application',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('client_id', sa.Uuid(), nullable=False),
    sa.Column('hashed_client_secret', sa.String(), nullable=False),
    sa.Column('redirect_uris', sa.JSON(), nullable=False),
    sa.Column('confidential_client', sa.Boolean(), nullable=False),
    sa.Column('created', sa.BigInteger(), nullable=False),
    sa.Column('updated', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repository',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('capacity', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('directory',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('repository_id', sa.BigInteger(), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.Column('created', sa.BigInteger(), nullable=False),
    sa.Column('updated', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['directory.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oauth2_grant',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('application_id', sa.BigInteger(), nullable=False),
    sa.Column('scope', sa.String(), nullable=False),
    sa.Column('created', sa.Integer(), nullable=False),
    sa.Column('updated', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['oauth2_application.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('directory_link',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('directory_id', sa.BigInteger(), nullable=False),
    sa.Column('created', sa.BigInteger(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['directory_id'], ['directory.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('repository_id', sa.BigInteger(), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.Column('created', sa.BigInteger(), nullable=False),
    sa.Column('updated', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('size', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['directory.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file_link',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('file_id', sa.BigInteger(), nullable=False),
    sa.Column('created', sa.BigInteger(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('file_link')
    op.drop_table('file')
    op.drop_table('directory_link')
    op.drop_table('oauth2_grant')
    op.drop_table('directory')
    op.drop_table('repository')
    op.drop_table('oauth2_application')
    op.drop_table('user')
    op.drop_table('login_source')
    sa.Enum('Plain', 'OAuth2', 'Smtp', name='logintype').drop(op.get_bind())
    # ### end Alembic commands ###
